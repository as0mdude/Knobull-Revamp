{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\4s0md\\\\Documents\\\\React\\\\prayer-app\\\\prayer-app\\\\src\\\\pages\\\\PrayerGet.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport PrayerGetComponent from \"./PrayerGetComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrayerGet = () => {\n  _s();\n  const [requests, setPosts] = useState(null);\n  useEffect(() => {\n    try {\n      fetch('http://localhost:8000/requests').then(res => {\n        if (!res.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return res.json();\n      }).then(data => {\n        setPosts(data);\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n        // You can add additional error handling logic here if needed.\n      });\n    } catch (error) {\n      console.error('An error occurred:', error);\n      // You can add additional error handling logic here if needed.\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: requests && /*#__PURE__*/_jsxDEV(PrayerGetComponent, {\n      requests: requests\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(PrayerGet, \"Ffe0sqlCmcZthdit5cgTVQ/cAnA=\");\n_c = PrayerGet;\nexport default PrayerGet;\nvar _c;\n$RefreshReg$(_c, \"PrayerGet\");","map":{"version":3,"names":["useEffect","useState","PrayerGetComponent","jsxDEV","_jsxDEV","PrayerGet","_s","requests","setPosts","fetch","then","res","ok","Error","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/4s0md/Documents/React/prayer-app/prayer-app/src/pages/PrayerGet.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport PrayerGetComponent from \"./PrayerGetComponent\";\r\n\r\n\r\n\r\nconst PrayerGet = () => {\r\n  const [requests, setPosts] = useState(null)\r\n\r\n  useEffect(() => {\r\n    try {\r\n      fetch('http://localhost:8000/requests')\r\n        .then(res => {\r\n          if (!res.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n          return res.json();\r\n        })\r\n        .then(data => {\r\n          setPosts(data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching data:', error);\r\n          // You can add additional error handling logic here if needed.\r\n        });\r\n    } catch (error) {\r\n      console.error('An error occurred:', error);\r\n      // You can add additional error handling logic here if needed.\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {requests && <PrayerGetComponent requests={requests} />}\r\n      \r\n    </div>\r\n  );\r\n  };\r\n  \r\n  export default PrayerGet;\r\n  "],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACd,IAAI;MACFS,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,GAAG,IAAI;QACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;QACZP,QAAQ,CAACO,IAAI,CAAC;MAChB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C;MACF,CAAC,CAAC;IACN,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKe,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBb,QAAQ,iBAAIH,OAAA,CAACF,kBAAkB;MAACK,QAAQ,EAAEA;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpD,CAAC;AAER,CAAC;AAAClB,EAAA,CA/BED,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAiCb,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}