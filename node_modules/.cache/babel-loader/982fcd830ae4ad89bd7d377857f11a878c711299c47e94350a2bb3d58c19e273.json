{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\4s0md\\\\Documents\\\\React\\\\prayer-app\\\\Prayer-App\\\\src\\\\pages\\\\PrayerGetComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './pgetcomp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generatePrayerExample = async requestText => {\n  try {\n    var _data$choices$, _data$choices$$messag;\n    const apiKey = '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';\n    const prompt = `Generate a prayer example for the request: \"${requestText}\"`;\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        model: 'gpt-3.5-turbo',\n        // Use the appropriate model name\n        messages: [{\n          role: 'system',\n          content: 'You are a prayer generator.'\n        }, {\n          role: 'user',\n          content: prompt\n        }]\n      })\n    });\n    const data = await response.json();\n    const prayerExample = (_data$choices$ = data.choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content;\n    return prayerExample;\n  } catch (error) {\n    console.error('Error generating prayer example:', error);\n    return \"An error occurred while generating a prayer example.\";\n  }\n};\nconst PrayerGetComponent = ({\n  requests\n}) => {\n  _s();\n  const [randomRequest, setRandomRequest] = useState(null);\n  const displayRandomRequest = async () => {\n    const randomIndex = Math.floor(Math.random() * requests.length);\n    const randomRequest = requests[randomIndex];\n\n    // Generate a prayer example for the random request body\n    const prayerExample = await generatePrayerExample(randomRequest.body);\n    setRandomRequest({\n      ...randomRequest,\n      prayerExample\n    });\n  };\n  const handleDelete = () => {\n    fetch('http://localhost:8000/requests/' + randomRequest.id, {\n      method: 'DELETE'\n    }).then(displayRandomRequest);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"currentrequest\",\n    children: [randomRequest && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [randomRequest.name, \" from \", randomRequest.location, \"'s prayer request:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"\\\"\", randomRequest.body, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Generated Prayer Example: \", randomRequest.prayerExample]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Complete and Remove Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)]\n    }, randomRequest.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: displayRandomRequest,\n      children: \"Display Random Prayer Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(PrayerGetComponent, \"A8Cr55zbzk/6ZzNiZAKss3qY6UY=\");\n_c = PrayerGetComponent;\nexport default PrayerGetComponent;\nvar _c;\n$RefreshReg$(_c, \"PrayerGetComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","generatePrayerExample","requestText","_data$choices$","_data$choices$$messag","apiKey","prompt","response","fetch","method","headers","Authorization","body","JSON","stringify","model","messages","role","content","data","json","prayerExample","choices","message","error","console","PrayerGetComponent","requests","_s","randomRequest","setRandomRequest","displayRandomRequest","randomIndex","Math","floor","random","length","handleDelete","id","then","className","children","name","location","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/4s0md/Documents/React/prayer-app/Prayer-App/src/pages/PrayerGetComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './pgetcomp.css';\r\n\r\nconst generatePrayerExample = async (requestText) => {\r\n  try {\r\n    const apiKey = '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';\r\n    const prompt = `Generate a prayer example for the request: \"${requestText}\"`;\r\n\r\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${apiKey}`,\r\n      },\r\n      body: JSON.stringify({\r\n        model: 'gpt-3.5-turbo', // Use the appropriate model name\r\n        messages: [{ role: 'system', content: 'You are a prayer generator.' }, { role: 'user', content: prompt }],\r\n      }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    const prayerExample = data.choices[0]?.message?.content;\r\n\r\n    return prayerExample;\r\n  } catch (error) {\r\n    console.error('Error generating prayer example:', error);\r\n    return \"An error occurred while generating a prayer example.\";\r\n  }\r\n};\r\n\r\n\r\n\r\nconst PrayerGetComponent = ({ requests }) => {\r\n  const [randomRequest, setRandomRequest] = useState(null);\r\n\r\n  const displayRandomRequest = async () => {\r\n    const randomIndex = Math.floor(Math.random() * requests.length);\r\n    const randomRequest = requests[randomIndex];\r\n  \r\n    // Generate a prayer example for the random request body\r\n    const prayerExample = await generatePrayerExample(randomRequest.body);\r\n  \r\n    setRandomRequest({ ...randomRequest, prayerExample });\r\n  };\r\n\r\n  const handleDelete=()=>{\r\n    fetch('http://localhost:8000/requests/' + randomRequest.id,{\r\n    method: 'DELETE'}).then(displayRandomRequest)\r\n  };\r\n\r\n  return (\r\n    <div className=\"currentrequest\">\r\n      \r\n      {randomRequest && (\r\n  <div className=\"blog-preview\" key={randomRequest.id}>\r\n    <h2>{randomRequest.name} from {randomRequest.location}'s prayer request:</h2>\r\n    <h4>\"{randomRequest.body}\"</h4>\r\n    <p>Generated Prayer Example: {randomRequest.prayerExample}</p>\r\n    <button onClick={handleDelete}>Complete and Remove Request</button>\r\n  </div>\r\n)}\r\n      \r\n      <button onClick={displayRandomRequest}>Display Random Prayer Request</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrayerGetComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}